services:
  etl:
    build:
      context: ./src/ETL
      dockerfile: Dockerfile
    volumes:
      - ./data_lake:/data_lake
      - ./data_warehouse:/data_warehouse
      - ./src/ETL:/src
    depends_on:
      data-manager:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    command: ["celery", "-A", "etl_worker", "worker", "--loglevel=info", "--queues=etl"]

  train:
    build:
      context: ./src/train
      dockerfile: Dockerfile
    volumes:
      - ./data_warehouse:/data_warehouse
      - ./src/train:/train
    ports:
      - "8080:8080"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all
              capabilities: [gpu]
    env_file:
      - path: ./src/train/mlflow_vars.env
    depends_on:
      - mlflow-service
      - rabbitmq
    command: ["celery", "-A", "train_worker", "worker", "--loglevel=info", "--queues=train"]

  mlflow-service:
    image: ubuntu/mlflow:2.1.1_1.0-22.04
    ports:
      - "5000:5000"
    volumes:
      - ./src/train/mlruns:/mlflow/mlruns
      - ./src/train/mlartifacts:/mlflow/mlartifacts
    command: mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri file:///mlflow/mlruns --default-artifact-root file:///mlflow/mlartifacts

  data-manager:
    image: postgres:15
    environment:
      POSTGRES_DB: autotrend
      POSTGRES_USER: autotrend_user
      POSTGRES_PASSWORD: autotrend_pass
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "55432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autotrend_user -d autotrend"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  controller:
    build:
      context: ./src/controller
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./src/controller:/app
    depends_on:
      data-manager:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    environment:
      - DATABASE_URL=postgresql://autotrend_user:autotrend_pass@data-manager:5432/autotrend

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: pass

volumes:
  postgres_data: